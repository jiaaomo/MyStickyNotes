{"ast":null,"code":"import _defineProperty from\"E:\\\\Users\\\\PC\\\\Desktop\\\\MySticky\\\\MyStickyNotes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\Users\\\\PC\\\\Desktop\\\\MySticky\\\\MyStickyNotes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:\\\\Users\\\\PC\\\\Desktop\\\\MySticky\\\\MyStickyNotes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Fab from\"@material-ui/core/Fab\";import AddIcon from\"@material-ui/icons/Add\";import Zoom from\"@material-ui/core/Zoom\";function CreateArea(props){var _useState=useState({title:\"\",content:\"\"}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var style={fontWeight:'bold',fontSize:25,fontFamily:\"Arial\"};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isExpand=_useState4[0],setExpand=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}function expandNote(){setExpand(true);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},isExpand?/*#__PURE__*/React.createElement(\"input\",{style:style,name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}):null,/*#__PURE__*/React.createElement(\"textarea\",{onClick:expandNote,name:\"content\",onChange:handleChange,value:note.content,placeholder:\"Take a note...\",rows:isExpand?\"5\":\"1\"}),/*#__PURE__*/React.createElement(Zoom,{in:isExpand},/*#__PURE__*/React.createElement(Fab,{onClick:submitNote},/*#__PURE__*/React.createElement(AddIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["E:/Users/PC/Desktop/MySticky/MyStickyNotes/src/components/CreateArea.jsx"],"names":["React","useState","Fab","AddIcon","Zoom","CreateArea","props","title","content","note","setNote","style","fontWeight","fontSize","fontFamily","isExpand","setExpand","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","expandNote"],"mappings":"kgBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,cAAwBL,QAAQ,CAAC,CAC/BM,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,KAAK,CAAG,CACZC,UAAU,CAAE,MADA,CAEZC,QAAQ,CAAE,EAFE,CAGZC,UAAU,CAAE,OAHA,CAAd,CAOA,eAA8Bb,QAAQ,CAAC,KAAD,CAAtC,yCAAOc,QAAP,eAAiBC,SAAjB,eAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAEAX,OAAO,CAAC,SAACY,QAAD,CAAc,CACpB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CACzBZ,KAAK,CAACkB,KAAN,CAAYf,IAAZ,EACAC,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAU,KAAK,CAACO,cAAN,GACD,CAED,QAASC,CAAAA,UAAT,EAAsB,CACpBV,SAAS,CAAC,IAAD,CAAT,CACD,CAED,mBACE,4CACE,4BAAM,SAAS,CAAC,aAAhB,EACCD,QAAQ,cACL,6BACE,KAAK,CAAEJ,KADT,CAEE,IAAI,CAAC,OAFP,CAGE,QAAQ,CAAEM,YAHZ,CAIE,KAAK,CAAER,IAAI,CAACF,KAJd,CAKE,WAAW,CAAC,OALd,EADK,CAQH,IATN,cAUE,gCACE,OAAO,CAAEmB,UADX,CAEE,IAAI,CAAC,SAFP,CAGE,QAAQ,CAAET,YAHZ,CAIE,KAAK,CAAER,IAAI,CAACD,OAJd,CAKE,WAAW,CAAC,gBALd,CAME,IAAI,CAAEO,QAAQ,CAAG,GAAH,CAAS,GANzB,EAVF,cAkBE,oBAAC,IAAD,EAAM,EAAE,CAAEA,QAAV,eACE,oBAAC,GAAD,EAAK,OAAO,CAAEQ,UAAd,eACE,oBAAC,OAAD,MADF,CADF,CAlBF,CADF,CADF,CA4BD,CAED,cAAelB,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nfunction CreateArea(props) {\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n\r\n  const style = {\r\n    fontWeight: 'bold',\r\n    fontSize: 25,\r\n    fontFamily: \"Arial\",\r\n    \r\n  };\r\n\r\n  const [isExpand, setExpand] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setNote((prevNote) => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n    props.onAdd(note);\r\n    setNote({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  function expandNote() {\r\n    setExpand(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n      {isExpand ? (\r\n          <input \r\n            style={style}\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n          />\r\n        ) : null}\r\n        <textarea\r\n          onClick={expandNote}\r\n          name=\"content\"\r\n          onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\"\r\n          rows={isExpand ? \"5\" : \"1\"}\r\n        />\r\n        <Zoom in={isExpand}>\r\n          <Fab onClick={submitNote}>\r\n            <AddIcon />\r\n          </Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n"]},"metadata":{},"sourceType":"module"}